<div class="modal fade" id="entretienLogModal" tabindex="-1" aria-labelledby="entretienLogModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="entretienLogModalLabel">Ajouter un log d'entretien</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="entretienLogForm" method="POST" action="{{ path('app_entretien_log_create') }}">
                    <div class="row">
                        <div class="col-md-6">
                            {{ form_row(form.parcMachine) }}
                        </div>
                        <div class="col-md-6">
                            {{ form_row(form.logDate) }}
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            {{ form_row(form.volumeHoraire) }}
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12">
                            {{ form_row(form.activite) }}
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                        {{ form_widget(form.submit) }}
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('entretienLogForm');
    const modal = document.getElementById('entretienLogModal');
    
    form.addEventListener('submit', function(e) {
        e.preventDefault();
        
        const formData = new FormData(form);
        
        fetch(form.action, {
            method: 'POST',
            body: formData,
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Afficher un message de succès
                showAlert('success', data.message);
                
                // Fermer le modal
                const modalInstance = bootstrap.Modal.getInstance(modal);
                modalInstance.hide();
                
                // Réinitialiser le formulaire
                form.reset();
                
                // Optionnel : recharger la page ou mettre à jour le tableau
                setTimeout(() => {
                    location.reload();
                }, 1000);
            } else {
                // Afficher les erreurs
                if (data.errors && data.errors.length > 0) {
                    data.errors.forEach(error => {
                        showAlert('danger', error);
                    });
                } else {
                    showAlert('danger', data.message);
                }
            }
        })
        .catch(error => {
            console.error('Erreur:', error);
            showAlert('danger', 'Une erreur est survenue lors de l\'enregistrement');
        });
    });
});

function showAlert(type, message) {
    const alertContainer = document.getElementById('alertContainer') || createAlertContainer();
    
    const alertDiv = document.createElement('div');
    alertDiv.className = `alert alert-${type} alert-dismissible fade show`;
    alertDiv.innerHTML = `
        ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    `;
    
    alertContainer.appendChild(alertDiv);
    
    // Auto-dismiss après 5 secondes
    setTimeout(() => {
        if (alertDiv.parentNode) {
            alertDiv.remove();
        }
    }, 5000);
}

function createAlertContainer() {
    const container = document.createElement('div');
    container.id = 'alertContainer';
    container.className = 'position-fixed top-0 end-0 p-3';
    container.style.zIndex = '9999';
    document.body.appendChild(container);
    return container;
}
</script> 